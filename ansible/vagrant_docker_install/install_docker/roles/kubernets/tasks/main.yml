---
# Docker Configuration

# - name: SYSTEM | Install docker dependencies
#   become: true
#   package: name={{ item }} state=present
#   with_items:
#     - python-apt
#     - ca-certificates
#     - lsb-release
- name: SYSTEM | SWAP OFF | Disable SWAP since kubernetes can't work with swap enabled (1/2)
  shell: |
    swapoff -a
  # when: kubernetes_installed is changed
  
- name: SYSTEM | SWAP DELETE | Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

# - name: SYSTEM | Set a hostname
#   hostname:
#     name: "{{ new_hostname }}"

- name: SYSTEM | set /etc/hosts
  template:
    src: ./template/hosts
    dest: /etc/hosts
  become: true

- name: SYSTEM | install utility packages (openssh-server, apt-transport-https)
  apt:
    name: ['openssh-server', 'apt-transport-https']
    state: present
  become: true

# - name: SYSTEM | Set a hostname
#   lineinfile:
#     path: "/etc/hosts"
#     regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"

- name: KUBERNETS | Adding Kubernets apt key
  become: true
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become_user: root

# - name: GPG | download and move GPG docker file
#   become: true
#   command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

- name: KUBERNETS | Set the Kubernets repository
  become: true
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
#deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable

- name: SYSTEM | Update and upgrade apt packages
  become: true
  apt:
    #upgrade: yes
    update_cache: yes
    #cache_valid_time: 1500 #25mins

- name: KUBERNETS | Install Kubernets Packages
  apt:
    name: ['kubeadm', 'kubelet', 'kubectl']
    state: present
    update_cache: yes
  # with_items:
  #   - kubeadm
  #   - kubelet
  #   - kubectl
  become: true

- name: KUBERNETS | Hold kubernets packages
  dpkg_selections:
    name: "{{item}}"
    selection: hold
  with_items:
    - kubeadm
    - kubelet
    - kubectl
  become: true


  # when: kubernetes_installed is changed

# - name: Install prerequisites for docker-compose
#   apt:
#     name: "{{item}}"
#     state: present
#     update_cache: yes
#   with_items:
#     - python3-pip
#     - python3-setuptools
#     - virtualenv
#   become: true

# # - name: Install docker-compose
# #   pip:
# #     name: docker-compose

# - name: KUBERNETS | Ensure cgroup environment is set 
#   ansible.builtin.lineinfile:
#     path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
#     regexp: '^Environment='
#     line: Environment=‚Äùcgroup-driver=systemd/cgroup-driver=cgroupfs

- name: KUBERNETS | DOCKER | Ensure cgroup in docker
  ansible.builtin.lineinfile:
    path: /etc/docker/daemon.json
    line: {"exec-opts": ["native.cgroupdriver=systemd"]}
    create: yes
  become_user: root

- name: KUBERNETS | DOCKER | restart docker daemon
  systemd:
    state: restarted
    daemon_reload: yes
    name: docker
  # become: true